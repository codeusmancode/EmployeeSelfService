package essp.usg.model.updatable;

import essp.usg.model.entity_objects.CustEmployeeOvertimeImpl;

import essp.usg.model.updatable.common.VOCustEmployeeOvertimeRow;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.Date;
import java.sql.Timestamp;

import java.sql.Types;

import java.util.Calendar;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.RowSet;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Apr 09 14:29:07 PKT 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class VOCustEmployeeOvertimeRowImpl extends ViewRowImpl implements VOCustEmployeeOvertimeRow {


    public static final int ENTITY_CUSTEMPLOYEEOVERTIME = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        OvertimeId,
        OvertimeDate,
        OvertimePayMonth,
        EmployeeId,
        OvertimeHours,
        OvertimeDept,
        CreationDate,
        UpdationDate,
        CreatedBy,
        UpdatedBy,
        VersionNumber,
        UserIpAddress,
        PayYear,
        Name,
        Desg,
        usgesspappmodule_MonthCodes1_1,
        usgesspappmodule_EmployeesAll1_1;
        private static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int OVERTIMEID = AttributesEnum.OvertimeId.index();
    public static final int OVERTIMEDATE = AttributesEnum.OvertimeDate.index();
    public static final int OVERTIMEPAYMONTH = AttributesEnum.OvertimePayMonth.index();
    public static final int EMPLOYEEID = AttributesEnum.EmployeeId.index();
    public static final int OVERTIMEHOURS = AttributesEnum.OvertimeHours.index();
    public static final int OVERTIMEDEPT = AttributesEnum.OvertimeDept.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int UPDATIONDATE = AttributesEnum.UpdationDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int VERSIONNUMBER = AttributesEnum.VersionNumber.index();
    public static final int USERIPADDRESS = AttributesEnum.UserIpAddress.index();
    public static final int PAYYEAR = AttributesEnum.PayYear.index();
    public static final int NAME = AttributesEnum.Name.index();
    public static final int DESG = AttributesEnum.Desg.index();
    public static final int USGESSPAPPMODULE_MONTHCODES1_1 = AttributesEnum.usgesspappmodule_MonthCodes1_1.index();
    public static final int USGESSPAPPMODULE_EMPLOYEESALL1_1 = AttributesEnum.usgesspappmodule_EmployeesAll1_1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public VOCustEmployeeOvertimeRowImpl() {
    }

    /**
     * Gets CustEmployeeOvertime entity object.
     * @return the CustEmployeeOvertime
     */
    public CustEmployeeOvertimeImpl getCustEmployeeOvertime() {
        return (CustEmployeeOvertimeImpl) getEntity(ENTITY_CUSTEMPLOYEEOVERTIME);
    }

    /**
     * Gets the attribute value for OVERTIME_ID using the alias name OvertimeId.
     * @return the OVERTIME_ID
     */
    public BigDecimal getOvertimeId() {
        return (BigDecimal) getAttributeInternal(OVERTIMEID);
    }

    /**
     * Sets <code>value</code> as attribute value for OVERTIME_ID using the alias name OvertimeId.
     * @param value value to set the OVERTIME_ID
     */
    public void setOvertimeId(BigDecimal value) {
        setAttributeInternal(OVERTIMEID, value);
    }

    /**
     * Gets the attribute value for OVERTIME_DATE using the alias name OvertimeDate.
     * @return the OVERTIME_DATE
     */
    public Timestamp getOvertimeDate() {
        return (Timestamp) getAttributeInternal(OVERTIMEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for OVERTIME_DATE using the alias name OvertimeDate.
     * @param value value to set the OVERTIME_DATE
     */
    public void setOvertimeDate(Timestamp value) {
        setAttributeInternal(OVERTIMEDATE, value);
    }

    /**
     * Gets the attribute value for OVERTIME_PAY_MONTH using the alias name OvertimePayMonth.
     * @return the OVERTIME_PAY_MONTH
     */
    public BigDecimal getOvertimePayMonth() {
        return (BigDecimal) getAttributeInternal(OVERTIMEPAYMONTH);
    }

    /**
     * Sets <code>value</code> as attribute value for OVERTIME_PAY_MONTH using the alias name OvertimePayMonth.
     * @param value value to set the OVERTIME_PAY_MONTH
     */
    public void setOvertimePayMonth(BigDecimal value) {
        setAttributeInternal(OVERTIMEPAYMONTH, value);
    }

    /**
     * Gets the attribute value for EMPLOYEE_ID using the alias name EmployeeId.
     * @return the EMPLOYEE_ID
     */
    public BigDecimal getEmployeeId() {
        return (BigDecimal) getAttributeInternal(EMPLOYEEID);
    }

    /**
     * Sets <code>value</code> as attribute value for EMPLOYEE_ID using the alias name EmployeeId.
     * @param value value to set the EMPLOYEE_ID
     */
    public void setEmployeeId(BigDecimal value) {
        setAttributeInternal(EMPLOYEEID, value);
    }

    /**
     * Gets the attribute value for OVERTIME_HOURS using the alias name OvertimeHours.
     * @return the OVERTIME_HOURS
     */
    public BigDecimal getOvertimeHours() {
        return (BigDecimal) getAttributeInternal(OVERTIMEHOURS);
    }

    /**
     * Sets <code>value</code> as attribute value for OVERTIME_HOURS using the alias name OvertimeHours.
     * @param value value to set the OVERTIME_HOURS
     */
    public void setOvertimeHours(BigDecimal value) {
        setAttributeInternal(OVERTIMEHOURS, value);
    }

    /**
     * Gets the attribute value for OVERTIME_DEPT using the alias name OvertimeDept.
     * @return the OVERTIME_DEPT
     */
    public String getOvertimeDept() {
        return (String) getAttributeInternal(OVERTIMEDEPT);
    }

    /**
     * Sets <code>value</code> as attribute value for OVERTIME_DEPT using the alias name OvertimeDept.
     * @param value value to set the OVERTIME_DEPT
     */
    public void setOvertimeDept(String value) {
        setAttributeInternal(OVERTIMEDEPT, value);
    }

    /**
     * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
     * @return the CREATION_DATE
     */
    public Timestamp getCreationDate() {
        return (Timestamp) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Gets the attribute value for UPDATION_DATE using the alias name UpdationDate.
     * @return the UPDATION_DATE
     */
    public Timestamp getUpdationDate() {
        return (Timestamp) getAttributeInternal(UPDATIONDATE);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public BigDecimal getCreatedBy() {
        return (BigDecimal) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(BigDecimal value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for UPDATED_BY using the alias name UpdatedBy.
     * @return the UPDATED_BY
     */
    public BigDecimal getUpdatedBy() {
        return (BigDecimal) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for UPDATED_BY using the alias name UpdatedBy.
     * @param value value to set the UPDATED_BY
     */
    public void setUpdatedBy(BigDecimal value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for VERSION_NUMBER using the alias name VersionNumber.
     * @return the VERSION_NUMBER
     */
    public BigDecimal getVersionNumber() {
        return (BigDecimal) getAttributeInternal(VERSIONNUMBER);
    }

    /**
     * Sets <code>value</code> as attribute value for VERSION_NUMBER using the alias name VersionNumber.
     * @param value value to set the VERSION_NUMBER
     */
    public void setVersionNumber(BigDecimal value) {
        setAttributeInternal(VERSIONNUMBER, value);
    }

    /**
     * Gets the attribute value for USER_IP_ADDRESS using the alias name UserIpAddress.
     * @return the USER_IP_ADDRESS
     */
    public String getUserIpAddress() {
        return (String) getAttributeInternal(USERIPADDRESS);
    }

    /**
     * Sets <code>value</code> as attribute value for USER_IP_ADDRESS using the alias name UserIpAddress.
     * @param value value to set the USER_IP_ADDRESS
     */
    public void setUserIpAddress(String value) {
        setAttributeInternal(USERIPADDRESS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Name.
     * @return the Name
     */
    public String getName() {
        return (String) getAttributeInternal(NAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Name.
     * @param value value to set the  Name
     */
    public void setName(String value) {
        setAttributeInternal(NAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Desg.
     * @return the Desg
     */
    public String getDesg() {
        return (String) getAttributeInternal(DESG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Desg.
     * @param value value to set the  Desg
     */
    public void setDesg(String value) {
        setAttributeInternal(DESG, value);
    }

    /**
     * Gets the attribute value for PAY_YEAR using the alias name PayYear.
     * @return the PAY_YEAR
     */
    public BigDecimal getPayYear() {
        return (BigDecimal) getAttributeInternal(PAYYEAR);
    }

    /**
     * Sets <code>value</code> as attribute value for PAY_YEAR using the alias name PayYear.
     * @param value value to set the PAY_YEAR
     */
    public void setPayYear(BigDecimal value) {
        setAttributeInternal(PAYYEAR, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> usgesspappmodule_MonthCodes1_1.
     */
    public RowSet getusgesspappmodule_MonthCodes1_1() {
        return (RowSet) getAttributeInternal(USGESSPAPPMODULE_MONTHCODES1_1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> usgesspappmodule_EmployeesAll1_1.
     */
    public RowSet getusgesspappmodule_EmployeesAll1_1() {
        return (RowSet) getAttributeInternal(USGESSPAPPMODULE_EMPLOYEESALL1_1);
    }

    @Override
    protected void create(AttributeList attributeList) {
        java.util.Date date = (java.util.Date)ADFContext.getCurrent().getSessionScope().get("overtime_date");
        System.out.println("create:"+ADFContext.getCurrent().getSessionScope().get("overtime_date"));
        
        
        String payMonth = (String)ADFContext.getCurrent().getSessionScope().get("pay_month");
        
        if (date != null)
            setOvertimeDate(new Timestamp(date.getTime()));
        if (payMonth != null)
            setOvertimePayMonth(new BigDecimal(payMonth));
        setOvertimeDept("OP01");//setting default department just for now. i.e. finishing 
        setPayYear(new BigDecimal(Calendar.getInstance().get(Calendar.YEAR)));
        super.create(attributeList);
    }
    
    
    
    public int overtimeExists(int employeeID, Date date) {
        CallableStatement cst = null;
        int exists = 0;
        try {
            cst = getDBTransaction().createCallableStatement("{? = call USTMS.xx_overtime_exists(?,?)}", 0);
            cst.registerOutParameter(1, Types.INTEGER);
            cst.setInt(2, employeeID);
            cst.setDate(3, date);
            cst.executeUpdate();
            exists = cst.getInt(1);
        } catch (Exception ex) {
            exists = 1;
            ex.printStackTrace();
        }
        return exists;
    }
}

