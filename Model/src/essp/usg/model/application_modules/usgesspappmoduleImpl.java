package essp.usg.model.application_modules;

import essp.usg.model.application_modules.common.usgesspappmodule;
import essp.usg.model.readonly.MonthCodesImpl;

import essp.usg.model.readonly.VOLoginAccessApprovalHeaderImpl;

import java.sql.CallableStatement;

import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.Types;

import oracle.adf.share.ADFContext;

import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;
import oracle.jbo.ViewObject;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Apr 20 14:36:11 PKT 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class usgesspappmoduleImpl extends ApplicationModuleImpl implements usgesspappmodule {
    /**
     * This is the default constructor (do not remove).
     */
    public usgesspappmoduleImpl() {
    }

    /**
     * Container's getter for ReadOnlyVOLeaveBalance1.
     * @return ReadOnlyVOLeaveBalance1
     */
    public ViewObjectImpl getReadOnlyVOLeaveBalance1() {
        return (ViewObjectImpl) findViewObject("ReadOnlyVOLeaveBalance1");
    }

    /**
     * Container's getter for VOEOLeavesPortal1.
     * @return VOEOLeavesPortal1
     */
    public ViewObjectImpl getVOEOLeavesPortal1() {
        return (ViewObjectImpl) findViewObject("VOEOLeavesPortal1");
    }

    /**
     * Container's getter for VOLeavesPortalHr1.
     * @return VOLeavesPortalHr1
     */
    public ViewObjectImpl getVOLeavesPortalHr1() {
        return (ViewObjectImpl) findViewObject("VOLeavesPortalHr1");
    }

    /**
     * Container's getter for LeaveTypes1.
     * @return LeaveTypes1
     */
    public ViewObjectImpl getLeaveTypes1() {
        return (ViewObjectImpl) findViewObject("LeaveTypes1");
    }

    /**
     * Container's getter for VOHodApprovals1.
     * @return VOHodApprovals1
     */
    public ViewObjectImpl getVOHodApprovals1() {
        return (ViewObjectImpl) findViewObject("VOHodApprovals1");
    }

    /**
     * Container's getter for VOHODLeavesPortal1.
     * @return VOHODLeavesPortal1
     */
    public ViewObjectImpl getVOHODLeavesPortal1() {
        return (ViewObjectImpl) findViewObject("VOHODLeavesPortal1");
    }

    /**
     * Container's getter for VOCustEmployeeOvertime1.
     * @return VOCustEmployeeOvertime1
     */
    public ViewObjectImpl getVOCustEmployeeOvertime1() {
        return (ViewObjectImpl) findViewObject("VOCustEmployeeOvertime1");
    }

    /**
     * Container's getter for MonthCodes1.
     * @return MonthCodes1
     */
    public MonthCodesImpl getMonthCodes1() {
        return (MonthCodesImpl) findViewObject("MonthCodes1");
    }

    /**
     * Container's getter for EmployeesAll1.
     * @return EmployeesAll1
     */
    public ViewObjectImpl getEmployeesAll1() {
        return (ViewObjectImpl) findViewObject("EmployeesAll1");
    }

    /**
     * Container's getter for EmployeeOvertimeDetail1.
     * @return EmployeeOvertimeDetail1
     */
    public ViewObjectImpl getEmployeeOvertimeDetail1() {
        return (ViewObjectImpl) findViewObject("EmployeeOvertimeDetail1");
    }
    
    public void processOvertime(){
      String amount = ADFContext.getCurrent().getPageFlowScope().get("amount").toString();
      String monthCode = ADFContext.getCurrent().getSessionScope().get("month_code").toString();
      
      int hourlyRate = getHourlyRate(monthCode, Integer.parseInt(amount));
      
      //deactivate other rates of the same month
      deactivateRates(monthCode);
      
      Row row = getVOCustIncentiveHourlyRate1().createRow();
      row.setAttribute("Rate", hourlyRate);
      row.setAttribute("MonthCode",monthCode );
      row.setAttribute("CalculationDate", new Date(System.currentTimeMillis()));
      
      getDBTransaction().commit();
    }
    private int deactivateRates(String monthCode){
        PreparedStatement pst = null;
        try{
            pst= getDBTransaction().createPreparedStatement("update cust_incentive_hourly_rate set active = 'N' where month_code = ?", 0);
            pst.setString(1, monthCode);
            return pst.executeUpdate();   
        }catch(Exception ex){
            
            ex.printStackTrace();
            return -1;
        }
        
    }
    private int getHourlyRate(String monthCode,int amount){
        CallableStatement cst = null;
        try{
            cst = getDBTransaction().createCallableStatement("{? = call USTMS.cust_overtime_hourly_rate(?,?)}", 0);
            cst.registerOutParameter(1, Types.INTEGER);
            cst.setString(2, ADFContext.getCurrent().getSessionScope().get("month_code").toString());
            cst.setInt(3, amount);
            cst.executeUpdate();
            return cst.getInt(1);
        }catch(Exception ex){
            ex.printStackTrace();
            return 0;
        }
    }

    /**
     * Container's getter for EmployeeOvertimeSummary1.
     * @return EmployeeOvertimeSummary1
     */
    public ViewObjectImpl getEmployeeOvertimeSummary1() {
        return (ViewObjectImpl) findViewObject("EmployeeOvertimeSummary1");
    }

    /**
     * Container's getter for VOCustIncentiveHourlyRate1.
     * @return VOCustIncentiveHourlyRate1
     */
    public ViewObjectImpl getVOCustIncentiveHourlyRate1() {
        return (ViewObjectImpl) findViewObject("VOCustIncentiveHourlyRate1");
    }

    /**
     * Container's getter for IncentiveSummary1.
     * @return IncentiveSummary1
     */
    public ViewObjectImpl getIncentiveSummary1() {
        return (ViewObjectImpl) findViewObject("IncentiveSummary1");
    }

    /**
     * Container's getter for VOXxItAccessReqHeader1.
     * @return VOXxItAccessReqHeader1
     */
    public ViewObjectImpl getVOXxItAccessReqHeader1() {
        return (ViewObjectImpl) findViewObject("VOXxItAccessReqHeader1");
    }


    /**
     * Container's getter for VOXxItAccessReqLines2.
     * @return VOXxItAccessReqLines2
     */
    public ViewObjectImpl getVOXxItAccessReqLines2() {
        return (ViewObjectImpl) findViewObject("VOXxItAccessReqLines2");
    }


    /**
     * Container's getter for AccessType1.
     * @return AccessType1
     */
    public ViewObjectImpl getAccessType1() {
        return (ViewObjectImpl) findViewObject("AccessType1");
    }

    /**
     * Container's getter for AccessObject1.
     * @return AccessObject1
     */
    public ViewObjectImpl getAccessObject1() {
        return (ViewObjectImpl) findViewObject("AccessObject1");
    }

    /**
     * Container's getter for EmployeesMgt1.
     * @return EmployeesMgt1
     */
    public ViewObjectImpl getEmployeesMgt1() {
        return (ViewObjectImpl) findViewObject("EmployeesMgt1");
    }

    /**
     * Container's getter for VOXxInternetAccessReqLines1.
     * @return VOXxInternetAccessReqLines1
     */
//    public ViewObjectImpl getVOXxInternetAccessReqLines1() {
//        return (ViewObjectImpl) findViewObject("VOXxInternetAccessReqLines1");
//    }


    /**
     * Container's getter for AccessObjectEmail1.
     * @return AccessObjectEmail1
     */
    public ViewObjectImpl getAccessObjectEmail1() {
        return (ViewObjectImpl) findViewObject("AccessObjectEmail1");
    }

    /**
     * Container's getter for AccessObjectInternet1.
     * @return AccessObjectInternet1
     */
    public ViewObjectImpl getAccessObjectInternet1() {
        return (ViewObjectImpl) findViewObject("AccessObjectInternet1");
    }
    
    
    public void getActiveInternetReq(){
        CallableStatement cst = null;
        try{
            cst = getDBTransaction().createCallableStatement("{? = call USTMS.get_active_internet_req(?)}", 0);
            cst.registerOutParameter(1, Types.INTEGER);
            cst.setString(2, ADFContext.getCurrent().getSessionScope().get("sess_empcode").toString());
            cst.executeUpdate();
            int cnt =  cst.getInt(1);
            ADFContext.getCurrent().getSessionScope().put("active_req", cnt);
        }catch(Exception ex){
            ex.printStackTrace();
                    }
    }
    
    
    private int initiateApproval(int user_id,int req_header_id, String unit){
        CallableStatement cst = null;
        try{
            cst = getDBTransaction().createCallableStatement("{call USTMS.xx_initiate_it_req(?,?,?)}", 0);
    
            cst.setInt(1, user_id);
            cst.setInt(2, req_header_id);
            cst.setString(3, unit);
            cst.executeUpdate();
            return 1;
        }catch(Exception ex){
            ex.printStackTrace();
            return 0;
        }
    }
    
    public void submitITAccessReq(){
       
        ViewObject voLines = getVOXxItAccessReqLines2(); //getViewObject("VOXxItAccessReqLines2Iterator");
        int headerID = Integer.parseInt(getVOXxItAccessReqHeader1().getCurrentRow().getAttribute("ReqHeaderId").toString());
        //access login
        ViewObject vo = getAccessObject1();
        Row[] rows = vo.getFilteredRows("Selected", true);
        for (Row r:rows){
            Row newRow = voLines.createRow();
            newRow.setAttribute("AccessObject", Integer.parseInt(r.getAttribute("AccessObjectId").toString()));
            newRow.setAttribute("AccessType", 1);
            newRow.setAttribute("OtherAccessObject", r.getAttribute("Other")+"");
          
           newRow.setAttribute("ReqHeaderId", headerID);
        }
        
        //access email
        vo = getAccessObjectEmail1();
        rows = vo.getFilteredRows("Selected", true);
        for (Row r:rows){
            Row newRow = voLines.createRow();
            newRow.setAttribute("AccessObject", Integer.parseInt(r.getAttribute("AccessObjectId").toString()));
            newRow.setAttribute("AccessType", 2);
            
            newRow.setAttribute("ReqHeaderId",headerID);
        }
        
        //access internet
        vo = getAccessObjectInternet1();
        rows = vo.getFilteredRows("Selected", true);
        for (Row r:rows){
            Row newRow = voLines.createRow();
            newRow.setAttribute("AccessObject", Integer.parseInt(r.getAttribute("AccessObjectId").toString()));
            newRow.setAttribute("AccessType", 3);
            newRow.setAttribute("Justification", r.getAttribute("Justification")+"");
            
            newRow.setAttribute("ReqHeaderId", headerID);
        }
        
        
        initiateApproval(Integer.parseInt(ADFContext.getCurrent().getSessionScope().get("sess_empcode").toString()),headerID,"US2");
        

    }

    /**
     * Container's getter for ITReqHistory1.
     * @return ITReqHistory1
     */
    public ViewObjectImpl getITReqHistory1() {
        return (ViewObjectImpl) findViewObject("ITReqHistory1");
    }

    /**
     * Container's getter for AMPM1.
     * @return AMPM1
     */
    public ViewObjectImpl getAMPM1() {
        return (ViewObjectImpl) findViewObject("AMPM1");
    }

    /**
     * Container's getter for FirstSecondHalf1.
     * @return FirstSecondHalf1
     */
    public ViewObjectImpl getFirstSecondHalf1() {
        return (ViewObjectImpl) findViewObject("FirstSecondHalf1");
    }

    /**
     * Container's getter for DashboardCasualLeave1.
     * @return DashboardCasualLeave1
     */
    public ViewObjectImpl getDashboardCasualLeave1() {
        return (ViewObjectImpl) findViewObject("DashboardCasualLeave1");
    }


    /**
     * Container's getter for DashboardCasualLeaveDetail1.
     * @return DashboardCasualLeaveDetail1
     */
    public ViewObjectImpl getDashboardCasualLeaveDetail1() {
        return (ViewObjectImpl) findViewObject("DashboardCasualLeaveDetail1");
    }

    /**
     * Container's getter for VLCasualLeave1.
     * @return VLCasualLeave1
     */
    public ViewLinkImpl getVLCasualLeave1() {
        return (ViewLinkImpl) findViewLink("VLCasualLeave1");
    }

    /**
     * Container's getter for VOLoginAccessApproval1.
     * @return VOLoginAccessApproval1
     */
    public ViewObjectImpl getVOLoginAccessApproval1() {
        return (ViewObjectImpl) findViewObject("VOLoginAccessApproval1");
    }

    /**
     * Container's getter for VOLoginAccessApprovalHeader1.
     * @return VOLoginAccessApprovalHeader1
     */
    public VOLoginAccessApprovalHeaderImpl getVOLoginAccessApprovalHeader1() {
        return (VOLoginAccessApprovalHeaderImpl) findViewObject("VOLoginAccessApprovalHeader1");
    }

    /**
     * Container's getter for VOLoginAccessApprovalLines1.
     * @return VOLoginAccessApprovalLines1
     */
    public ViewObjectImpl getVOLoginAccessApprovalLines1() {
        return (ViewObjectImpl) findViewObject("VOLoginAccessApprovalLines1");
    }

    /**
     * Container's getter for VLLoginAccessApproval1.
     * @return VLLoginAccessApproval1
     */
    public ViewLinkImpl getVLLoginAccessApproval1() {
        return (ViewLinkImpl) findViewLink("VLLoginAccessApproval1");
    }
}

